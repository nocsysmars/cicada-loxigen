// Copyright 2020, ....
//
// LoxiGen is licensed under the Eclipse Public License, version 1.0 (EPL), with
// the following special exception:
//
// LOXI Exception
//
// As a special exception to the terms of the EPL, you may distribute libraries
// generated by LoxiGen (LoxiGen Libraries) under the terms of your choice, provided
// that copyright and licensing notices generated by LoxiGen are not altered or removed
// from the LoxiGen Libraries and the notice provided below is (i) included in
// the LoxiGen Libraries, if distributed in source code form and (ii) included in any
// documentation for the LoxiGen Libraries, if distributed in binary form.
//
// Notice: "Copyright 2014, Big Switch Networks, Inc. This library was generated by the LoxiGen Compiler."
//
// You may not use this file except in compliance with the EPL or LOXI Exception. You may obtain
// a copy of the EPL at:
//
// http://www.eclipse.org/legal/epl-v10.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// EPL for the specific language governing permissions and limitations
// under the EPL.

#version 4

enum onf_action_subtypes(wire_type=uint16_t) {
  ONFACT_ET_COPY_FIELD =  0xc80,
};

// ======================= ONF extension OXM
struct of_oxm_onf_actset_output: of_oxm {
    uint32_t type_len ==  0xffff5608;
    uint32_t experimenter == 0x4f4e4600;  // onf = 0x4f4e4600,
    //uint16_t subtype == 1;           // OFDPA_OXM_ACTSET_OUTPUT
    uint32_t value;
};

struct onf_oxm_packet_regs0: of_oxm  {
    uint32_t type_len ==  0x80010008; // onf = 0x4f4e4600,
    uint64_t value;
};

struct onf_oxm_packet_regs1: of_oxm  {
    uint32_t type_len ==  0x80010208; // onf = 0x4f4e4600,
    uint64_t value;
};

struct onf_oxm_packet_regs2: of_oxm  {
    uint32_t type_len ==  0x80010408; // onf = 0x4f4e4600,
    uint64_t value;
};

struct onf_oxm_packet_regs3: of_oxm  {
    uint32_t type_len ==  0x80010608; // onf = 0x4f4e4600,
    uint64_t value;
};

struct of_action_onf : of_action_experimenter {
    uint16_t  type == 0xffff;
    uint16_t  len;
    uint32_t  experimenter == 0x4f4e4600; //onf = 0x4f4e4600,
    uint16_t  subtype == ?;
    pad(6);
};

struct of_action_onf_copy_field : of_action_onf {
    uint16_t  type == 0xffff;         // OFPT_EXPERIMENTER
    uint16_t  len;
    uint32_t  experimenter == 0x4f4e4600; //onf = 0x4f4e4600,
    uint16_t  subtype == 0xc80;
    pad(2);
    uint16_t  n_bits;
    uint16_t  src_offset;
    uint16_t  dst_offset;
    pad(2);
};
